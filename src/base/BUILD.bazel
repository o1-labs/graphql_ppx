## OBAZL GENERATED FILE ## To retain edits (prevent overwrite), delete this line.

load(
    "@obazl_rules_ocaml//ocaml:rules.bzl",
    "ocaml_archive",
    "ocaml_module",
    "ocaml_ns",
)
load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "string_flag")
load(
    "//:BUILD.bzl",
    "REPO_ARCHIVE_OPTS",
    "REPO_MODULE_OPTS",
    "REPO_NS_MODULE_OPTS",
)
load(
    ":BUILD.bzl",
    "PKG_ARCHIVE_OPTS",
    "PKG_MODULE_OPTS",
    "PKG_NS_MODULE_OPTS",
)

################################################################
## STANZA 1: LIBRARY GRAPHQL_PPX_BASE
################################################################
GRAPHQL_PPX_BASE_MODULE_OPTS = REPO_MODULE_OPTS + PKG_MODULE_OPTS

GRAPHQL_PPX_BASE_NS_MODULE_OPTS = REPO_NS_MODULE_OPTS + PKG_NS_MODULE_OPTS

GRAPHQL_PPX_BASE_ARCHIVE_OPTS = REPO_ARCHIVE_OPTS + PKG_ARCHIVE_OPTS + []

GRAPHQL_PPX_BASE_NS_MODULE_OPTS = REPO_NS_MODULE_OPTS + PKG_NS_MODULE_OPTS

GRAPHQL_PPX_BASE_NS_MODULE_OPTS = REPO_NS_MODULE_OPTS + PKG_NS_MODULE_OPTS

GRAPHQL_PPX_BASE_DEPS = [
    # do not sort (buildifier)
    "@opam//pkg:unix",
    "@opam//pkg:result",
    "@opam//pkg:yojson",
]

GRAPHQL_PPX_BASE_PPX = "@//bzl/ppx:ppx.exe[ppx_tools_versioned.metaquot_402]"

GRAPHQL_PPX_BASE_PPX_ARGS = [
    # do not sort (buildifier)
]

##############
ocaml_archive(
    name = "graphql_ppx_base",
    opts = GRAPHQL_PPX_BASE_ARCHIVE_OPTS,
    visibility = ["//visibility:public"],
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Ast_serializer_apollo",
        ":_Build_config",
        ":_Compat",
        ":_Dirty_checker",
        ":_Generator_utils",
        ":_Graphql_ast",
        ":_Graphql_lexer",
        ":_Graphql_parser",
        ":_Graphql_parser_document",
        ":_Graphql_parser_value",
        ":_Graphql_ppx_base",
        ":_Graphql_printer",
        ":_Log",
        ":_Multi_visitor",
        ":_Option",
        ":_Ppx_config",
        ":_Read_schema",
        ":_Result_decoder",
        ":_Result_ext",
        ":_Result_structure",
        ":_Rule_known_argument_names",
        ":_Rule_no_unused_variables",
        ":_Schema",
        ":_Source_pos",
        ":_Traversal_utils",
        ":_Type_utils",
        ":_Validations",
    ],
)

#########
ocaml_ns(
    name = "Graphql_ppx_base_ns",
    ns = "graphql_ppx_base",
    opts = GRAPHQL_PPX_BASE_NS_MODULE_OPTS,
    submodules = [
        # do not sort (buildifier)
        "ast_serializer_apollo.ml",
        "compat.ml",
        "dirty_checker.ml",
        "generator_utils.ml",
        "graphql_ast.ml",
        "graphql_lexer.ml",
        "graphql_parser.ml",
        "graphql_parser_document.ml",
        "graphql_parser_value.ml",
        "graphql_ppx_base.ml",
        "graphql_printer.ml",
        "log.ml",
        "multi_visitor.ml",
        "option.ml",
        "ppx_config.ml",
        "read_schema.ml",
        "result_decoder.ml",
        "result_ext.ml",
        "result_structure.ml",
        "rule_known_argument_names.ml",
        "rule_no_unused_variables.ml",
        "schema.ml",
        "source_pos.ml",
        "traversal_utils.ml",
        "type_utils.ml",
        "validations.ml",
        "build_config.ml"
    ],
)

#############
ocaml_module(
    name = "_Ast_serializer_apollo",
    src = "ast_serializer_apollo.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Compat",
    src = "compat.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [":_Build_config"]
)

#############
ocaml_module(
    name = "_Dirty_checker",
    src = "dirty_checker.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Log",
    ],
)

#############
ocaml_module(
    name = "_Generator_utils",
    src = "generator_utils.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Compat",
        ":_Graphql_ast",
        ":_Ppx_config",
        ":_Schema",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Graphql_ast",
    src = "graphql_ast.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Graphql_lexer",
    src = "graphql_lexer.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Graphql_parser",
    src = "graphql_parser.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_lexer",
        ":_Result_ext",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Graphql_parser_document",
    src = "graphql_parser_document.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Graphql_lexer",
        ":_Graphql_parser",
        ":_Graphql_parser_value",
        ":_Result_ext",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Graphql_parser_value",
    src = "graphql_parser_value.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Graphql_lexer",
        ":_Graphql_parser",
        ":_Result_ext",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Graphql_ppx_base",
    src = "graphql_ppx_base.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Ast_serializer_apollo",
        ":_Compat",
        ":_Generator_utils",
        ":_Graphql_ast",
        ":_Graphql_lexer",
        ":_Graphql_parser",
        ":_Graphql_parser_document",
        ":_Graphql_printer",
        ":_Log",
        ":_Option",
        ":_Ppx_config",
        ":_Read_schema",
        ":_Result_decoder",
        ":_Result_structure",
        ":_Schema",
        ":_Source_pos",
        ":_Traversal_utils",
        ":_Type_utils",
        ":_Validations",
    ],
)

#############
ocaml_module(
    name = "_Graphql_printer",
    src = "graphql_printer.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Option",
        ":_Ppx_config",
        ":_Schema",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Log",
    src = "log.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Ppx_config",
    ],
)

#############
ocaml_module(
    name = "_Multi_visitor",
    src = "multi_visitor.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Traversal_utils",
    ],
)

#############
ocaml_module(
    name = "_Option",
    src = "option.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS,
)

#############
ocaml_module(
    name = "_Ppx_config",
    src = "ppx_config.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Option",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Read_schema",
    src = "read_schema.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS + ["-linkall"],
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Dirty_checker",
        ":_Log",
        ":_Ppx_config",
        ":_Schema",
    ],
)

#############
ocaml_module(
    name = "_Result_decoder",
    src = "result_decoder.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Generator_utils",
        ":_Graphql_ast",
        ":_Option",
        ":_Result_structure",
        ":_Schema",
        ":_Source_pos",
        ":_Type_utils",
    ],
)

#############
ocaml_module(
    name = "_Result_ext",
    src = "result_ext.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS,
)

#############
ocaml_module(
    name = "_Result_structure",
    src = "result_structure.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Schema",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Rule_known_argument_names",
    src = "rule_known_argument_names.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Option",
        ":_Schema",
        ":_Source_pos",
        ":_Traversal_utils",
    ],
)

#############
ocaml_module(
    name = "_Rule_no_unused_variables",
    src = "rule_no_unused_variables.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Source_pos",
        ":_Traversal_utils",
    ],
)

#############
ocaml_module(
    name = "_Schema",
    src = "schema.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS,
)

#############
ocaml_module(
    name = "_Source_pos",
    src = "source_pos.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS,
)

#############
ocaml_module(
    name = "_Traversal_utils",
    src = "traversal_utils.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Generator_utils",
        ":_Graphql_ast",
        ":_Option",
        ":_Result_structure",
        ":_Schema",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Type_utils",
    src = "type_utils.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Graphql_ast",
        ":_Schema",
        ":_Source_pos",
    ],
)

#############
ocaml_module(
    name = "_Validations",
    src = "validations.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        ":_Multi_visitor",
        ":_Rule_known_argument_names",
        ":_Rule_no_unused_variables",
        ":_Traversal_utils",
    ],
)

#############
ocaml_module(
    name = "_Build_config",
    src = ":gensrcs",
    # src = "build_config.ml",
    ns = ":Graphql_ppx_base_ns",
    opts = GRAPHQL_PPX_BASE_MODULE_OPTS,
    ppx = GRAPHQL_PPX_BASE_PPX,
    ppx_args = GRAPHQL_PPX_BASE_PPX_ARGS,
    deps = GRAPHQL_PPX_BASE_DEPS + [
        # do not sort (buildifier)
        # ":_Multi_visitor",
        # ":_Rule_known_argument_names",
        # ":_Rule_no_unused_variables",
        # ":_Traversal_utils",
    ],
)

genrule(
    name = "gensrcs",
    srcs = ["build_config.cppo.ml"],
    outs = ["build_config.ml"],
    tools = ["@ocaml//tools:cppo"],
    cmd = " ".join([
        "$(location @ocaml//tools:cppo) -V OCAML:4.07.1 -o $@ $<"
    ]),
)

###################################################################
######## Configuration Settings - see :BUILD.bzl #################
bool_flag(
    name = "always-link",
    build_setting_default = False,
)

config_setting(
    name = "enable_always_link",
    flag_values = {":always-link": str(True)},
)

bool_flag(
    name = "debug",
    build_setting_default = True,
)

config_setting(
    name = "enable_debug",
    flag_values = {":debug": str(True)},
)

bool_flag(
    name = "threads",
    build_setting_default = True,
)

config_setting(
    name = "enable_threads",
    flag_values = {":threads": str(True)},
)

bool_flag(
    name = "tooling",
    build_setting_default = False,
)

config_setting(
    name = "enable_tooling",
    flag_values = {":tooling": str(True)},
)

bool_flag(
    name = "verbose",
    build_setting_default = False,
)

config_setting(
    name = "enable_verbose",
    flag_values = {":verbose": str(True)},
)

## PPX control
string_flag(
    name = "ppx-out",
    build_setting_default = "binary",
    values = [
        "binary",
        "text",
    ],
)

config_setting(
    name = "enable_ppx_output_format_text",
    flag_values = {":ppx-out": "text"},
)

config_setting(
    name = "enable_ppx_output_format_binary",
    flag_values = {":ppx-out": "binary"},
)
